#!/opt/python-3.6/bin/python3

from operator import itemgetter

"""Information ordering for multi-document text summarization that orders sentences in chronological order"""


def order_info(summaries_sent):
    """
    # TODO: update function when params change
    This function takes in dictionary key= topic id value= array of sentence, date tuples:
    {topic: [(sentence, later date), (sentence, earlier date)]}
    generated by select_content(doc_data) in text_summarizer.py main.
    
    It should coherently order the sentences for each topic and return
    a dictionary of selected sentences in order for each topic:
    {topic: [sentence with earlier date, sentence with later date]}
    """

    # Dictionary to store ordered sentences for each topic
    summaries_in_order = dict()

    # TODO: Change to a better ordering solution later?

    # Sort original dates in order
    for topic in summaries_sent:
        sentences = summaries_sent[topic]
        sentences.sort(key=itemgetter(1))

        # Get only the sentence from each tuple
        sorted_sent = [sen_pair[0] for sen_pair in sentences]

        # Add sentence array for each topic to new dict
        summaries_in_order[topic] = sorted_sent

    # Return dictionary with ordered sentences {topic: [sentences]}
    return summaries_in_order
