#!/usr/bin/env python3
# -*- coding: utf-8 -*-

from operator import itemgetter

"""Information ordering for multi-document text summarization that orders sentences in chronological order"""

__author__ = "Amina Venton"
__email__ = "aventon@uw.edu"

def order_info(topics_with_summaries):
    """
    This function takes in a list of Topic objects with ranked summaries
    generated by select_content(topics) in text_summarizer.py main.
    
    It orders the Sentence objectst chronologically (earliest date first) 
    for each Topic summary and returns a list of Topics with chronologically 
    ordered summaries
    """

    # Sort original dates in order and then by sentence position
    for topic in topics_with_summaries:
        
        # Get the list of ranked Sentence objects per Topic object
        sentences = topic.summary

        # Create list of tuples of Sentence objects with their date and position
        # [(sentence_object, sentence_date, sentence_position)]
        sentence_tuples = [(sentence_object, sentence_object.parent_doc.date, sentence_object.index) for sentence_object in sentences]
        
        # Sort Sentence objects first by date and then by position in the doc
        sentence_tuples.sort(key=itemgetter(1,2))

        # Get only the Sentence object from each tuple
        sorted_sent = [sen_tup[0] for sen_tup in sentence_tuples]

        # Add chronologically sorted Sentence objects list for each Topic object summary
        topic.summary = sorted_sent
        
    # Return list of Topics with chronologically ordered sentences in the Topic summary
    return topics_with_summaries
