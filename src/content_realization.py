#!/opt/python-3.6/bin/python3
# TODO: Find a parser/other tools for content realization
"""Content realization for multi-document text summarization that generates well-formed sentences"""


ORDER_INFO_SENT = [["This is sentence one in the second document, which is even longer than the previous.",
                    "This is sentence two in the second document, which is definitely the longest of all the sentences.",
                    "This is sentence one in the first document.",
                    "This is sentence two in the first document, which is a little longer.",
                    "This is sentence three is the first document.",
                    "This is sentence four in the first document.",
                    "This is sentence one in the third document, I lied, it's shorter.",
                    "This is sentence two in the third document. It's okay, I guess.",
                    "4th_sent_3rd_doc okay-to-add-if-it-fits?"
                    ],
                   ["This is the only sentence in the only doc in the second topic."]
]


def realize_content(summaries_in_order):
    """
    This function takes in a 2D of ordered sentences: [topic][sentences]
    generated by order_info(summaries_sent, sent_dates) in text_summarizer.py main.
    It should do sentence clean-up to generate well-formed sentences.
    """

    # dummy data for testing TODO: delete later
    summaries_in_order = ORDER_INFO_SENT

    # TODO: Have a real solution to content realization, coreference resolution, rewrite rules??
    # Parser processing sentences here..

    #for now return summaries_in_order 2D ordered array
    return summaries_in_order

if __name__ == '__main__':

    summaries = realize_content(ORDER_INFO_SENT)

    print("\nTESTING: summaries={}".format(summaries))